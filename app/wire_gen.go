// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"smart-home/modules/tuya_device/api"
	"smart-home/modules/tuya_device/infrastructure"
	"smart-home/modules/tuya_device/usecases"
)

// Injectors from wire.go:

func LoadApis() (*Api, func(), error) {
	scenesRepo := infrastructure.NewScenesRepo()
	devicesRepo := infrastructure.NewDevicesRepo()
	deviceConnection := infrastructure.NewDeviceConnection()
	encryptMessage := infrastructure.NewEncryptMessage()
	buildMessageUsecase := usecases.NewBuildMessageUsecase(encryptMessage)
	applySceneUsecase := usecases.NewApplySceneUsecase(scenesRepo, devicesRepo, deviceConnection, buildMessageUsecase)
	decryptMessage := infrastructure.NewDecryptMessage()
	getDevicesStatus := usecases.NewGetDevicesStatus(devicesRepo, deviceConnection, buildMessageUsecase, decryptMessage)
	tuyaDeviceApi := api.NewTuyaDeviceApi(applySceneUsecase, buildMessageUsecase, getDevicesStatus)
	appApi, err := loadApis(tuyaDeviceApi)
	if err != nil {
		return nil, nil, err
	}
	return appApi, func() {
	}, nil
}

// wire.go:

type Api struct {
	tuyaDeviceApi *api.TuyaDeviceApi
}

func loadApis(
	tuyaDeviceApi *api.TuyaDeviceApi,
) (*Api, error) {
	return &Api{
		tuyaDeviceApi,
	}, nil
}
