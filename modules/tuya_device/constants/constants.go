package constants

const (
	DEVICES_FILE = "devices.json"
	SCENES_FILE  = "scenes.json"
)

const (
	COMMAND_TYPE_AP_CONFIG           = 0x01 // FRM_TP_CFG_WF
	COMMAND_TYPE_ACTIVE              = 0x02 // FRM_TP_ACTV
	COMMAND_TYPE_SESS_KEY_NEG_START  = 0x03 // FRM_SECURITY_TYPE3
	COMMAND_TYPE_SESS_KEY_NEG_RESP   = 0x04 // FRM_SECURITY_TYPE4
	COMMAND_TYPE_SESS_KEY_NEG_FINISH = 0x05 // FRM_SECURITY_TYPE5
	COMMAND_TYPE_UNBIND              = 0x06 // FRM_TP_UNBIND_DEV
	COMMAND_TYPE_CONTROL             = 0x07 // FRM_TP_CMD
	COMMAND_TYPE_STATUS              = 0x08 // FRM_TP_STAT_REPORT
	COMMAND_TYPE_HEART_BEAT          = 0x09 // FRM_TP_HB
	COMMAND_TYPE_DP_QUERY            = 0x0a // FRM_QUERY_STAT
	COMMAND_TYPE_QUERY_WIFI          = 0x0b // FRM_SSID_QUERY
	COMMAND_TYPE_TOKEN_BIND          = 0x0c // FRM_USER_BIND_REQ
	COMMAND_TYPE_CONTROL_NEW         = 0x0d // FRM_TP_NEW_CMD
	COMMAND_TYPE_ENABLE_WIFI         = 0x0e // FRM_ADD_SUB_DEV_CMD
	COMMAND_TYPE_WIFI_INFO           = 0x0f // FRM_CFG_WIFI_INFO
	COMMAND_TYPE_DP_QUERY_NEW        = 0x10 // FRM_QUERY_STAT_NEW
	COMMAND_TYPE_SCENE_EXECUTE       = 0x11 // FRM_SCENE_EXEC
	COMMAND_TYPE_UPDATEDPS           = 0x12 // FRM_LAN_QUERY_DP
	COMMAND_TYPE_UDP_NEW             = 0x13 // FR_TYPE_ENCRYPTION
	COMMAND_TYPE_AP_CONFIG_NEW       = 0x14 // FRM_AP_CFG_WF_V40

	COMMAND_TYPE_BOARDCAST_LPV34 = 0x23 // FR_TYPE_BOARDCAST_LPV34
	COMMAND_TYPE_REQ_DEVINFO     = 0x25 // broadcast to port 7000 to get v3.5 devices to send their info
	COMMAND_TYPE_LAN_EXT_STREAM  = 0x40 // FRM_LAN_EXT_STREAM
)

var NO_PROTOCOL_HEADER_CMDS = map[int]bool{
	COMMAND_TYPE_DP_QUERY:            true,
	COMMAND_TYPE_DP_QUERY_NEW:        true,
	COMMAND_TYPE_UPDATEDPS:           true,
	COMMAND_TYPE_HEART_BEAT:          true,
	COMMAND_TYPE_SESS_KEY_NEG_START:  true,
	COMMAND_TYPE_SESS_KEY_NEG_RESP:   true,
	COMMAND_TYPE_SESS_KEY_NEG_FINISH: true,
	COMMAND_TYPE_LAN_EXT_STREAM:      true,
}

const PREFIX_55AA_VALUE = 0x000055AA
const SUFFIX_55AA_VALUE = 0x0000AA55

var PREFIX_BIN = []byte{0x00, 0x00, 0x55, 0xaa}
var SUFFIX_BIN = []byte{0x00, 0x00, 0xaa, 0x55}
